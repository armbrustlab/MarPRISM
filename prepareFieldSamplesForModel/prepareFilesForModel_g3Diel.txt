###g3 diel 

#concatenate all of the pfam results for the g3 diel polyA metaT contigs
egthomas@grazer:/mnt/nfs/projects/ryan/Gradients3/PA/diel/assemblies/raw/Pfam34$ for f in *domtblout.tab; do (cat "${f}"; echo) >> ~/prepareG3/G3_diel_pfamAnnotations; done

R

#loads the concatenated pfam results for the g3 diel polyA metaT contigs
> res <- read.table("G3_diel_pfamAnnotations")

> str(res$V8)
 num [1:18799724] 57.6 54.1 53.4 53.2 52.4 51.5 51.2 51.1 50.4 49.2 ...
 
> str(res$V7)
 num [1:18799724] 2.2e-13 2.8e-12 4.7e-12 5.2e-12 9.6e-12 ...

#only get pfam annotations with evalue of 10^-5
> res <- res %>% filter(V7 < 10^(-5))

> #for each contig reading frame, get the pfam with the highest score
> best_pfam_dat <- res %>% group_by(V1) %>% slice(which.max(V8))

#write best pfam for each contig reading frame to a csv
> best_pfam_dat %>% write_csv("G3_diel_pfamAnnotations_bestPfam.tab")

egthomas@grazer:~/g3Diel$ cp /mnt/nfs/projects/armbrust-metat/gradients3/g3_diel_pa_metat/assemblies/annotations/kallisto/unstranded/G3PA_diel.raw.est_counts_unstranded.csv.gz .

#load number of transcripts mapped to each contig for g3 diel poly A samples
> g3Diel <- read_csv("G3PA_diel.raw.est_counts_unstranded.csv")

#gather counts data into long form
> g3Diel <- g3Diel %>% gather(G3PA.diel.S4C11.A:G3PA.diel.S4C8.C, key = "sample", value = "est_counts")

> str(g3Diel)
tibble [891,755,160 × 5] (S3: tbl_df/tbl/data.frame)
 $ ...1      : num [1:891755160] 1 2 3 4 5 6 7 8 9 10 ...
 $ target_id : chr [1:891755160] "G3PA.diel.S4C11.A_TRINITY_DN957788_c0_g1_i1" "G3PA.diel.S4C11.A_TRINITY_DN957715_c1_g1_i1" "G3PA.diel.S4C11.A_TRINITY_DN957748_c0_g1_i1" "G3PA.diel.S4C11.A_TRINITY_DN957812_c0_g1_i1" ...
 $ length    : num [1:891755160] 303 387 616 341 317 414 383 315 456 718 ...
 $ sample    : chr [1:891755160] "G3PA.diel.S4C11.A" "G3PA.diel.S4C11.A" "G3PA.diel.S4C11.A" "G3PA.diel.S4C11.A" ...
 $ est_counts: num [1:891755160] 7.7 7 14.9 6 6 ...

#get rid of contigs without any reads mapped
> g3Diel <- g3Diel %>% filter(est_counts > 0)

> g3Diel %>% write_csv("G3_diel_mappedReadAbundance_noZeroes.csv")

#load taxa annotations for g3 diel contigs, made using marferret and 
#marmicrodb
> tax <- read.table("/mnt/nfs/projects/armbrust-metat/gradients3/g3_diel_pa_metat/assemblies/annotations/diamond/marferret_v1.1/NPac.G3PA_diel.MarFERReT_v1.1_MMDB.lca.tab")

#make variable for nucleotide id
> tax <- tax %>% mutate(nt_id = str_replace(V1, "_[0-9]{1,}$", ""))

> str(tax$V2)
 int [1:23272764] 0 464225 41875 2864 0 2759 1172189 0 0 33090 ...
 
#gets rid of rows that have an NA taxa annotation (some unannotated sequences are
#labeled as taxa id 0)
> tax <- tax %>% filter(!is.na(V2))
> tax <- tax %>% filter(V2 != 0)

> str(tax$V3)
 num [1:14794518] 8.05e-91 1.90e-72 2.27e-71 5.84e-51 3.70e-10 ...

#get best taxa annotation for each nucleotide id
> tax_best <- tax %>% group_by(nt_id) %>% arrange(V3) %>% slice(1)

> tax_best %>% write_csv("~/g3Diel/NPac.G3PA_diel.MarFERReT_v1.1_MMDB.lca.tab_fall2023.csv")

#get rid of unnecessary variables
> g3Diel <- g3Diel %>% select(-1)

#name nucleotide id variable 
> colnames(g3Diel)[1] <- "nt_id"

#add taxa annotations of contigs to the number of reads mapped to contig per sample
> nrow(g3Diel)
[1] 160940403
> g3Diel_tax <- g3Diel %>% left_join(tax_best, by = c("nt_id"))
> nrow(g3Diel_tax)
[1] 160940403

> g3Diel_tax %>% write_csv("~/g3Diel/G3_diel_mappedReadAbundance_noZeroes_withTaxa_fall2023.csv")

#ungroup dataframe
> g3Diel_tax <- g3Diel_tax %>% ungroup()

#get rid of contigs without taxa annotations
> g3Diel_tax <- g3Diel_tax %>% filter(!is.na(V2))
> g3Diel_tax <- g3Diel_tax %>% filter(V2 != 0)

#reads best pfam for each contig reading frame
> best_pfam_dat <- read_csv("~/g3Diel/G3_diel_pfamAnnotations_bestPfam.tab")

#make variable for nucleotide id 
> pfam <- best_pfam_dat %>% mutate(nt_id = str_replace(V1, "_[0-9]{1,}$", ""))

#more pfam annotations than nucleotide ids
> pfam %>% nrow()
[1] 10455625
> pfam %>% distinct(nt_id) %>% nrow()
[1] 10236026

#for each cluster contig, get the pfam with the highest score
> pfam <- pfam %>% group_by(nt_id) %>% slice(which.max(V8))

#now there is one pfam annotation for nucleotide id
> pfam %>% nrow()
[1] 10236026

#gets rid of unnecessary variables
> pfam_select <- pfam %>% select(V1, V4, V5, nt_id)

#adds best pfam annotation to each nucleotide id in counts dataframe
> nrow(g3Diel_tax)
[1] 101790418
> g3Diel_gather_merged <- g3Diel_tax %>% left_join(pfam_select %>% select(-V1), by = c("nt_id"))
> nrow(g3Diel_gather_merged)
[1] 101790418

#write data with number of mapped reads per contig per sample, with the contig's 
#pfam and taxa annotation to csv file
> g3Diel_gather_merged %>% write_csv("~/g3Diel/G3_diel_allSamples_processed_updatedMarferret_marmicroDb2023_noOutliers_fall2023.csv")

> str(g3Diel_gather_merged)
tibble [101,790,418 × 9] (S3: tbl_df/tbl/data.frame)
 $ nt_id     : chr [1:101790418] "G3PA.diel.S4C11.A_TRINITY_DN957715_c1_g1_i1" "G3PA.diel.S4C11.A_TRINITY_DN957812_c0_g1_i1" "G3PA.diel.S4C11.A_TRINITY_DN957777_c0_g1_i1" "G3PA.diel.S4C11.A_TRINITY_DN957730_c0_g1_i1" ...
 $ length    : num [1:101790418] 387 341 414 383 315 456 718 355 528 353 ...
 $ sample    : chr [1:101790418] "G3PA.diel.S4C11.A" "G3PA.diel.S4C11.A" "G3PA.diel.S4C11.A" "G3PA.diel.S4C11.A" ...
 $ est_counts: num [1:101790418] 7 6 4 7 12.2 ...
 $ V1        : chr [1:101790418] "G3PA.diel.S4C11.A_TRINITY_DN957715_c1_g1_i1_4" "G3PA.diel.S4C11.A_TRINITY_DN957812_c0_g1_i1_6" "G3PA.diel.S4C11.A_TRINITY_DN957777_c0_g1_i1_2" "G3PA.diel.S4C11.A_TRINITY_DN957730_c0_g1_i1_3" ...
 $ V2        : num [1:101790418] 2864 35679 33634 265572 131567 ...
 $ V3        : num [1:101790418] 2.74e-44 3.15e-47 4.08e-39 5.84e-16 9.51e-07 ...
 $ V4        : chr [1:101790418] NA NA "MT" NA ...
 $ V5        : chr [1:101790418] NA NA "PF12777.9" NA ...
 
###calculate tpm
> g3Diel_gather_merged <- g3Diel_gather_merged %>% mutate(length_kb = length/1000)

> g3Diel_gather_merged <- g3Diel_gather_merged %>% mutate(est_counts_div_length_kb = est_counts/length_kb)

> mCounts <- g3Diel_gather_merged %>% group_by(sample, V2) %>% summarize(mCount = sum(est_counts_div_length_kb)/1e6)
`summarise()` has grouped output by 'sample'. You can override using the `.groups` argument.

> mCounts <- mCounts %>% ungroup()

> nrow(g3Diel_gather_merged)
[1] 101790418
> g3Diel_gather_merged <- g3Diel_gather_merged %>% left_join(mCounts, by = c("sample", "V2"))
> nrow(g3Diel_gather_merged)
[1] 101790418

> g3Diel_gather_merged <- g3Diel_gather_merged %>% mutate(tpm = est_counts_div_length_kb/mCount)

> g3Diel_gather_merged %>% write_csv("~/g3Diel/g3Diel_surface_allSamples_processed_updatedMarferret_marmicroDb2023_noOutliers_tpm_fall2023.csv")

#after calculating tpm, get rid of contigs without pfam annotation
> g3Diel_gather_merged <- g3Diel_gather_merged %>% filter(!is.na(V5))

> g3Diel_gather_merged %>% write_csv("~/g3Diel/g3Diel_surface_allSamples_processed_updatedMarferret_marmicroDb2023_noOutliers_tpm_noNAPfam_fall2023.csv")

#load taxa names corresponding to each taxa id in marferret
> name <- read_csv("/mnt/nfs/projects/marferret/v1/data/MarFERReT.v1.taxa.csv")

#get rid of unnecessary variables
> name <- name %>% select(1:4)

#name tax_id variable
> colnames(g3Diel_gather_mergedDiel)[6] <- "tax_id"

#add taxa names to tpm counts
> nrow(g3Diel_gather_merged)
[1] 45417056
> g3Diel_gather_merged_name <- g3Diel_gather_merged %>% left_join(name, by = c("tax_id"))
> nrow(g3Diel_gather_merged_name)
[1] 45417056

#get rid of contigs without taxa ids
> g3Diel_gather_merged_name_noMissingTaxa <- g3Diel_gather_merged_name %>% filter(!is.na(tax_name))

#load core transcribed genes (CTGS) identified 
#from 10.1038/s41597-023-02842-4
> core <- read_csv("~/MarFERReT.v1.core_genes.csv")

#get just ctgs grouped at level of eukaryotes
> core <- core %>% filter(lineage == "Eukaryota")

#make a dataframe to count the number of ctgs in each species bin by sample
> pfamSummary <- g3Diel_gather_merged_name_noMissingTaxa %>% semi_join(core, by = c("V5" = "pfam_id"))

#calculate number of ctgs in each species bin by sample
> pfamSummary <- pfamSummary %>% group_by(sample, tax_id, tax_name) %>% distinct(V5) %>% summarize(numCorePfams = n())
`summarise()` has grouped output by 'sample', 'tax_id'. You can override using the `.groups` argument.

#there are a total of 605 eukaryote ctgs
> core %>% distinct(pfam_id) %>% summarize(n = n())
# A tibble: 1 × 1
      n
  <int>
1   605

#calculate proportion of ctgs in each species bin by sample
> pfamSummary <- pfamSummary %>% ungroup() %>% mutate(propCorePfams = numCorePfams/605)

> pfamSummary %>% write_csv("~/g3Diel/pfamSummary.csv")

#get species bins/samples that have at least 70% of ctgs detected
> pfamSummary <- pfamSummary %>% filter(propCorePfams >= .7)

#gets just the counts for taxa and sample pairs that have at least 70% ctg detection
> g3Diel_gather_merged_name_noMissingTaxa <- g3Diel_gather_merged_name_noMissingTaxa %>% semi_join(pfamSummary, by = c("tax_id", "sample"))

> str(g3Diel_gather_merged_name_noMissingTaxa$tpm)
 num [1:30477712] 6.3 34.78 22.25 3.28 3.15 ...

#for each taxa, sample, and pfam combination, get the total tpm
> g3Diel_summary <- g3Diel_gather_merged_name_noMissingTaxa %>% ungroup() %>% dplyr::group_by(sample, tax_id, tax_name, V5) %>% dplyr::summarize(tpm = sum(tpm))
`summarise()` has grouped output by 'sample', 'tax_id', 'tax_name'. You can override using the `.groups` argument.

#ungroup counts summary data
> g3Diel_summary <- g3Diel_summary %>% ungroup()

#name pfam variable
> colnames(g3Diel_summary)[4] <- "pfam"
  
#make pfam variable without digits after decimal
> g3Diel_summary <- g3Diel_summary %>% mutate(shortPfam = str_replace(pfam, "\\..{1,}$", ""))

#rename sample variable
> colnames(g3Diel_summary)[1] <- "sample_id"

#get rid of unnecessary variables
> g3Diel_summary_spread <- g3Diel_summary %>% select(sample_id, tax_name, shortPfam, tpm)

#spread data, filling in missing pfams with 0
> g3Diel_summary_spread <- g3Diel_summary_spread %>% spread(key = shortPfam, value = tpm, fill = 0)

#load feature pfams
> pfam <- read_csv("~/Extracted_Pfams_noOutliers_newContaminationMetric_xg.csv")

> merg <- g3Diel_summary_spread

#gather counts data into long form
> merg <- merg %>% gather(3:6451, key = "pfam", value = "tpm")

#get missing feature pfams
> miss <- pfam %>% anti_join(merg, by = c("pfam"))

#fill in missing pfams with 0 tpm
> miss <- miss %>% mutate(sample_id = "G3PA.diel.S4C11.A", tax_name = "Bacillariophyta")

> merg <- merg %>% bind_rows(miss)

#spread counts data, filling in missing pfams with tpm 0
> merg <- merg %>% spread(key = pfam, value = tpm, fill = 0)

merg %>% select(sample_id:tax_name) %>% write_csv("~/g3Diel/g3Diel_surface_tpm_updatedMarferret_marmicroDb2023_sampleTaxa_noOutliers_fixedTPM_fall2023.csv")
merg %>% select(-c(sample_id:tax_name)) %>% write_csv("~/g3Diel/g3Diel_surface_tpm_updatedMarferret_marmicroDb2023_noOutliers_fixedTPM_fall2023.csv")
